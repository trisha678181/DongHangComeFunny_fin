<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 0. /src/main/resources에 mybatis 폴더 생성 -->
	<!-- 0-1-1. /src/main/resource/mybatis에 ctrl+N 눌러서 
		 Wizards 안에  xml file 클릭 -->
	<!-- 0-1-2. file name란에 config.xml으로  지정 후 finish-->
	<!-- 0-2-1. /scr/main/resource/myabits에 ctrl+N 눌러서 
		 Wizards 안에 File 클릭-->
	<!-- 0-2-2. file name란에 db.properties으로 지정 후 finish -->
	<!-- 0-3-1. /src/main/resource/mybatis에 ctrl+N 눌러서
		 Wizards 안에 folder 클릭 -->
	<!-- 0-3-2. folder name란에 mapper으로 지정 후 finish -->
	
	<!-- 0-4-1. /src/main/resource/mybatis에 ctrl+N 눌러서 
		 Wizards 안에 xml files 클릭 -->
	<!-- 0-4-2. xml name란에 ㅇㅇㅇMapper으로 지정 후 finish
		 예) memberMapper, noticeMapper-->
	<!-- 0-4-3. mapper 안에 2번쨰줄에 다음과 같은 내용 입력 후 mapper namespace 이름 지정-->
	<!-- <!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 -->
	 
	<!-- 0-4-4. config.xml db.propertis ㅇㅇㅇmapper.xml 내용 입력 후  root-context.xml 작성 -->
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Root Context : 시스템에서 지속적으로 사용되는(어디서나 참조가 가능해야하는)	Bean들을 등록  -->
	
	<!-- 1. db.properties파일에 등록한 값들을 설정파일에 불러온다. -->	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- classpath : src/main/java, src/main/resources  -->
				<value>classpath:mybatis/db.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 2. db.properties에 저장된 property 값 연결시키기 -->
	<!-- org.mybatis.spring.SqlSessionFactoryBean의
		setDataSource 메서드에 넣어주기 위한 dataSource의 객체를 생성 -->
	<bean id="dataSourceSpied" 
	class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}"/> 
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
	</bean>
	
	<!-- 3. DB 관련 로그를 찍는 프록시 객체 생성 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource"> 
		<constructor-arg ref="dataSourceSpied" /> 
		<property name="logFormatter">
	 		<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
	 			<property name="loggingType" value="MULTI_LINE" /> 
				<property name="sqlPrefix" value="SQL:" />
			</bean>
		</property>
	</bean>
	
	<!-- 4.sqlSessionFactoryBean 등록, dataSource, config, mapper 연결시키기 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
  		<property name="configLocation" value="classpath:mybatis/config.xml"/>
  		<!-- mapper location 지정 -->
  		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
	</bean>	
	
	<!-- 5. SqlSessionTemplate bean 생성, 스프링으로 sql구문 실행시키기 -->
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>	
	
	<!-- 6. 파일업로드 시, multipart 데이터 처리를 도와주는 bean 생성 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!--업로드 가능한 최대 용량 -->
		<property name="maxUploadSize" value="100000000"/>
		<property name="maxInMemorySize" value="100000000"/>
	</bean>
	
	<!-- 7. 회원가입시, 메일링 서비스를 도와주는 bean 생성 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<!-- smtp 서버명 -->
		<property name="host" value="smtp.gmail.com"/>
		<!-- smtp post번호 -->
		<property name="port" value="587"/>
		<!-- 아이디 -->
		<property name="username" value="donghangcome@gmail.com"/>
		<!-- 비밀번호 -->
		<property name="password" value="wrnhlyrdytwxomqd"/>
		<!-- 기타 메일 관련 설정 -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
		
	
	
		
</beans>
